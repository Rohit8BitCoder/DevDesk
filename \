import type { Request, Response, NextFunction } from "express";
import { Router } from "express";
import { createClient } from "@supabase/supabase-js";
import dotenv from "dotenv"
import authMiddleware from "../middleware.ts";

dotenv.config();

const router = Router();

const SUPABASE_URL = process.env.SUPABASE_URL as string | undefined;
const SUPABASE_KEY = process.env.SUPABASE_KEY as string | undefined;

if (!SUPABASE_URL || !SUPABASE_KEY) {
  throw new Error("❌ Missing SUPABASE_URL or SUPABASE_KEY in environment.");
}

const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

interface AuthenticatedRequest extends Request {
  user?: { id: string };
}

const sendResponse = (
  res: Response,
  status: number,
  success: boolean,
  payload: any

)


//POST /tickets/:ticket_id/comments → Add comment.
//GET /tickets/:ticket_id/comments → Fetch all comments.
//DELETE /tickets/:ticket_id/comments/:comment_id → Delete a comment (only creator).


router.post('tickets/:ticket_id/comments', authMiddleware, async (req: Request, res: Response) => {
  try {

  } catch (error) {

  }
})
